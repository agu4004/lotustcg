"""Add user inventory and enhanced cart models

Revision ID: f1234567890
Revises: e43a4dde2df4
Create Date: 2025-08-29 17:48:30.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f1234567890'
down_revision = '962304bea846'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create user_inventories table
    op.create_table('user_inventories',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('is_public', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id']),
        sa.PrimaryKeyConstraint('id')
    )

    # Create inventory_items table
    op.create_table('inventory_items',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('inventory_id', sa.Integer(), nullable=False),
        sa.Column('card_id', sa.Integer(), nullable=False),
        sa.Column('quantity', sa.Integer(), nullable=False),
        sa.Column('condition', sa.String(length=20), nullable=False),
        sa.Column('is_verified', sa.Boolean(), nullable=False),
        sa.Column('is_for_sale', sa.Boolean(), nullable=False),
        sa.Column('sale_price', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('show_in_shop', sa.Boolean(), nullable=False),
        sa.Column('added_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
        sa.Column('verified_at', sa.DateTime(), nullable=True),
        sa.Column('verified_by', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
        sa.ForeignKeyConstraint(['inventory_id'], ['user_inventories.id'], ),
        sa.ForeignKeyConstraint(['verified_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create trade_offers table
    op.create_table('trade_offers',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('sender_id', sa.Integer(), nullable=False),
        sa.Column('receiver_id', sa.Integer(), nullable=False),
        sa.Column('status', sa.String(length=20), nullable=False),
        sa.Column('message', sa.Text(), nullable=True),
        sa.Column('counter_message', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
        sa.Column('expires_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create trade_items table
    op.create_table('trade_items',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('trade_offer_id', sa.Integer(), nullable=False),
        sa.Column('inventory_item_id', sa.Integer(), nullable=False),
        sa.Column('quantity', sa.Integer(), nullable=False),
        sa.Column('item_type', sa.String(length=10), nullable=False),
        sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], ),
        sa.ForeignKeyConstraint(['trade_offer_id'], ['trade_offers.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create cart_sessions table
    op.create_table('cart_sessions',
        sa.Column('id', sa.String(length=255), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create cart_items table
    op.create_table('cart_items',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('session_id', sa.String(length=255), nullable=False),
        sa.Column('card_id', sa.Integer(), nullable=True),
        sa.Column('inventory_item_id', sa.Integer(), nullable=True),
        sa.Column('quantity', sa.Integer(), nullable=False),
        sa.Column('added_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
        sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
        sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], ),
        sa.ForeignKeyConstraint(['session_id'], ['cart_sessions.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.CheckConstraint("((card_id IS NOT NULL AND inventory_item_id IS NULL) OR (card_id IS NULL AND inventory_item_id IS NOT NULL))", name='check_item_type')
    )

    # Create indexes for performance
    op.create_index('idx_user_inventories_user_id', 'user_inventories', ['user_id'])
    op.create_index('idx_inventory_items_inventory_id', 'inventory_items', ['inventory_id'])
    op.create_index('idx_inventory_items_card_id', 'inventory_items', ['card_id'])
    op.create_index('idx_inventory_items_show_in_shop', 'inventory_items', ['show_in_shop'])
    op.create_index('idx_trade_offers_sender_id', 'trade_offers', ['sender_id'])
    op.create_index('idx_trade_offers_receiver_id', 'trade_offers', ['receiver_id'])
    op.create_index('idx_trade_offers_status', 'trade_offers', ['status'])
    op.create_index('idx_cart_sessions_user_id', 'cart_sessions', ['user_id'])
    op.create_index('idx_cart_items_session_id', 'cart_items', ['session_id'])
    op.create_index('idx_cart_items_card_id', 'cart_items', ['card_id'])
    op.create_index('idx_cart_items_inventory_item_id', 'cart_items', ['inventory_item_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop indexes
    op.drop_index('idx_cart_items_inventory_item_id')
    op.drop_index('idx_cart_items_card_id')
    op.drop_index('idx_cart_items_session_id')
    op.drop_index('idx_cart_sessions_user_id')
    op.drop_index('idx_trade_offers_status')
    op.drop_index('idx_trade_offers_receiver_id')
    op.drop_index('idx_trade_offers_sender_id')
    op.drop_index('idx_inventory_items_show_in_shop')
    op.drop_index('idx_inventory_items_card_id')
    op.drop_index('idx_inventory_items_inventory_id')
    op.drop_index('idx_user_inventories_user_id')

    # Drop tables
    op.drop_table('cart_items')
    op.drop_table('cart_sessions')
    op.drop_table('trade_items')
    op.drop_table('trade_offers')
    op.drop_table('inventory_items')
    op.drop_table('user_inventories')

    # ### end Alembic commands ###